name: Convert PowerShell Script to EXE and Create Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install PSScriptAnalyzer
      shell: pwsh
      run: |
        Install-Module -Name PSScriptAnalyzer -Force -Scope CurrentUser

    - name: Install PS2EXE
      run: Install-Module -Name PS2EXE -Force -Scope CurrentUser

    - name: Convert PS1 to EXE
      run: |
        New-PS2EXE -inputFile ./Repair-Windows.ps1 -outputFile "./LOONY-TECH - Windows Repair.exe"

    - name: Zip Source Code
      run: Compress-Archive -Path ./ -DestinationPath ./source-code.zip -Force

    - name: Get the current date
      id: date
      run: echo "::set-output name=tag::V$(date +'%Y.%m.%d')"

    - name: Get previous tag
      id: prev_tag
      run: |
        git fetch --tags
        echo "::set-output name=tag::$(git describe --tags --abbrev=0 HEAD^)"
        
    - name: Get commit history
      id: commits
      run: |
        echo "::set-output name=log::$(git log --pretty=format:'- %s' ${{ steps.prev_tag.outputs.tag }}..HEAD)"
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.date.outputs.tag }}
        release_name: "Release ${{ steps.date.outputs.tag }}"
        body: |
          ### Changes in this release:
          ${{ steps.commits.outputs.log }}
        draft: false
        prerelease: false

    - name: Upload EXE to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: "./LOONY-TECH - Windows Repair.exe"
        asset_name: "LOONY-TECH - Windows Repair.exe"
        asset_content_type: application/octet-stream

    - name: Upload Source Code Zip to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./source-code.zip
        asset_name: source-code.zip
        asset_content_type: application/zip
